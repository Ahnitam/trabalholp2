/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pctFormulario;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import pctControle.Anime;
import pctControle.Estudio;
import pctControle.Genero;
import pctControle.Usuario;
import pctDAO.AnimeDAO;
import pctDAO.EstudioDAO;
import pctDAO.GeneroDAO;

/**
 *
 * @author Luis Henrique
 */
public class GerenciaAnime extends javax.swing.JFrame {

    /**
     * Creates new form GerenciaAnime
     */
    private Anime selectedAnime = null;
    List<Anime> AnimeList = null;
    private String comp = "";
    private Usuario user;
    
    public GerenciaAnime(Usuario user) {
        this.user = user;
        initComponents();
        ListarAnimes();
        BuscarEstudios();
        BuscarGeneros();
        FilterJComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        consultAnimeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ConsultAnimeTable = new javax.swing.JTable();
        txtConsultAnime = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        bigtxtConsultAnimeSin = new javax.swing.JTextPane();
        ConsultAnimeSinLabel = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        nameAnimeLabel = new javax.swing.JLabel();
        txtNameAnime = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        boxGender = new javax.swing.JComboBox<>();
        boxEstudio = new javax.swing.JComboBox<>();
        estudioLabel = new javax.swing.JLabel();
        faixaLabel = new javax.swing.JLabel();
        boxFaixa = new javax.swing.JComboBox<>();
        sinopseLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bigtxtSinopse = new javax.swing.JTextPane();
        btnClearAnime = new javax.swing.JButton();
        btnCadastraAnime = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listGeneros = new javax.swing.JList<>();
        listGeneros.setModel(new DefaultListModel<>());
        btnAdicionarGenero = new javax.swing.JButton();
        btnRemoverGenero = new javax.swing.JButton();
        animeData = new com.toedter.calendar.JDateChooser();
        DataLabel = new javax.swing.JLabel();
        jXCollapsiblePane1 = new org.jdesktop.swingx.JXCollapsiblePane();
        jPanel6 = new javax.swing.JPanel();
        nameAnimeLabel1 = new javax.swing.JLabel();
        txtNameAnimeUpdate = new javax.swing.JTextField();
        genderLabel1 = new javax.swing.JLabel();
        boxGenderUpdate = new javax.swing.JComboBox<>();
        boxEstudioUpdate = new javax.swing.JComboBox<>();
        estudioLabel1 = new javax.swing.JLabel();
        faixaLabel1 = new javax.swing.JLabel();
        boxFaixaUpdate = new javax.swing.JComboBox<>();
        sinopseLabel1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        bigtxtSinopseUpdate = new javax.swing.JTextPane();
        btnCancelarAnime = new javax.swing.JButton();
        btnUpdateAnime = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        listGenerosUpdate = new javax.swing.JList<>();
        listGenerosUpdate.setModel(new DefaultListModel<>());
        btnAdicionarGeneroUpdate = new javax.swing.JButton();
        labelAnimeName = new javax.swing.JLabel();
        btnRemoverGeneroUpdate = new javax.swing.JButton();
        animeDataUpdate = new com.toedter.calendar.JDateChooser();
        estudioLabel3 = new javax.swing.JLabel();

        jLabel2.setText("Estudio");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton4.setText("Cadatrar Estudio");

        jLabel1.setText("Digite o nome do Estudio:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciar Animes");
        setResizable(false);

        consultAnimeLabel.setText("Digite o nome do Anime:");

        ConsultAnimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdAnime", "Nome", "Faixa Etária", "Media", "Gênero", "Estudio", "Data Lançamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ConsultAnimeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ConsultAnimeTable.getTableHeader().setReorderingAllowed(false);
        ConsultAnimeTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ConsultAnimeTableFocusGained(evt);
            }
        });
        ConsultAnimeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConsultAnimeTableMouseClicked(evt);
            }
        });
        ConsultAnimeTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConsultAnimeTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(ConsultAnimeTable);
        if (ConsultAnimeTable.getColumnModel().getColumnCount() > 0) {
            ConsultAnimeTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            ConsultAnimeTable.getColumnModel().getColumn(1).setPreferredWidth(180);
            ConsultAnimeTable.getColumnModel().getColumn(2).setPreferredWidth(10);
            ConsultAnimeTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            ConsultAnimeTable.getColumnModel().getColumn(4).setPreferredWidth(20);
            ConsultAnimeTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            ConsultAnimeTable.getColumnModel().getColumn(6).setPreferredWidth(80);
        }

        txtConsultAnime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConsultAnimeFocusGained(evt);
            }
        });
        txtConsultAnime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConsultAnimeKeyReleased(evt);
            }
        });

        bigtxtConsultAnimeSin.setEditable(false);
        jScrollPane3.setViewportView(bigtxtConsultAnimeSin);

        ConsultAnimeSinLabel.setText("Sinopse:");

        btnUpdate.setText("Editar");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtConsultAnime, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConsultAnimeSinLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(consultAnimeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(consultAnimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtConsultAnime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultAnimeSinLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnHome))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultar Animes", jPanel1);

        nameAnimeLabel.setText("Nome:");

        txtNameAnime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameAnimeActionPerformed(evt);
            }
        });

        genderLabel.setText("Gênero:");

        boxGender.setEditable(true);

        boxEstudio.setEditable(true);

        estudioLabel.setText("Estudio:");

        faixaLabel.setText("Faixa Etária:");

        boxFaixa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+18", "+16", "+14", "+12", "+10", "L" }));
        boxFaixa.setSelectedIndex(-1);

        sinopseLabel.setText("Sinopse:");

        jScrollPane1.setViewportView(bigtxtSinopse);

        btnClearAnime.setText("Limpar");
        btnClearAnime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAnimeActionPerformed(evt);
            }
        });

        btnCadastraAnime.setText("Cadatrar");
        btnCadastraAnime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastraAnimeActionPerformed(evt);
            }
        });

        listGeneros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(listGeneros);

        btnAdicionarGenero.setText("Adicionar");
        btnAdicionarGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarGeneroActionPerformed(evt);
            }
        });

        btnRemoverGenero.setText("Remover");
        btnRemoverGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverGeneroActionPerformed(evt);
            }
        });

        animeData.setDateFormatString("dd'/'MM'/'y");

        DataLabel.setText("Data de Lançamento:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxGender, 0, 0, Short.MAX_VALUE)
                                            .addComponent(btnAdicionarGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnRemoverGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                                    .addComponent(genderLabel)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(boxFaixa, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(faixaLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jXCollapsiblePane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(DataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(90, 90, 90))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(animeData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(boxEstudio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(15, 15, 15))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(estudioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                .addGap(158, 158, 158))))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nameAnimeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtNameAnime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sinopseLabel)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCadastraAnime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearAnime)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameAnimeLabel)
                    .addComponent(sinopseLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNameAnime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(estudioLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(boxEstudio)
                                .addGap(18, 18, 18)
                                .addComponent(DataLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(animeData, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(boxGender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarGenero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoverGenero)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jXCollapsiblePane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(faixaLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxFaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastraAnime)
                    .addComponent(btnClearAnime))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastrar Animes", jPanel2);

        nameAnimeLabel1.setText("Nome:");

        genderLabel1.setText("Gênero:");

        boxGenderUpdate.setEditable(true);

        boxEstudioUpdate.setEditable(true);

        estudioLabel1.setText("Estudio:");

        faixaLabel1.setText("Faixa Etária:");

        boxFaixaUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "+18", "+16", "+14", "+12", "+10", "L" }));

        sinopseLabel1.setText("Sinopse:");

        jScrollPane7.setViewportView(bigtxtSinopseUpdate);

        btnCancelarAnime.setText("Cancelar");
        btnCancelarAnime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAnimeActionPerformed(evt);
            }
        });

        btnUpdateAnime.setText("Atualizar");
        btnUpdateAnime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAnimeActionPerformed(evt);
            }
        });

        jScrollPane8.setViewportView(listGenerosUpdate);

        btnAdicionarGeneroUpdate.setText("Adicionar");
        btnAdicionarGeneroUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarGeneroUpdateActionPerformed(evt);
            }
        });

        labelAnimeName.setText("Anime: ");

        btnRemoverGeneroUpdate.setText("Remover");
        btnRemoverGeneroUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverGeneroUpdateActionPerformed(evt);
            }
        });

        animeDataUpdate.setDateFormatString("dd'/'MM'/'y");

        estudioLabel3.setText("Data de Lançamento:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(nameAnimeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(416, 416, 416))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxGenderUpdate, 0, 0, Short.MAX_VALUE)
                                            .addComponent(btnAdicionarGeneroUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnRemoverGeneroUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(genderLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(estudioLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(75, 75, 75))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(estudioLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(143, 143, 143))
                                    .addComponent(animeDataUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(boxEstudioUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(3, 3, 3))
                            .addComponent(txtNameAnimeUpdate)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(boxFaixaUpdate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(faixaLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sinopseLabel1)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAnimeName)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(btnUpdateAnime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelarAnime)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(labelAnimeName)
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameAnimeLabel1)
                    .addComponent(sinopseLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtNameAnimeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel1)
                            .addComponent(estudioLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(boxGenderUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarGeneroUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoverGeneroUpdate))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(boxEstudioUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(estudioLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(animeDataUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(faixaLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxFaixaUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateAnime)
                    .addComponent(btnCancelarAnime))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Editar Anime", null, jPanel6, "");

        jTabbedPane1.setEnabledAt(2, false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void txtNameAnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameAnimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameAnimeActionPerformed

    private void btnAdicionarGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarGeneroActionPerformed
        AddGenero(listGeneros, boxGender);
    }//GEN-LAST:event_btnAdicionarGeneroActionPerformed

    private void btnCadastraAnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastraAnimeActionPerformed
        CadastrarAnimes();
    }//GEN-LAST:event_btnCadastraAnimeActionPerformed

    private void ConsultAnimeTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ConsultAnimeTableFocusGained
        btnUpdate.setEnabled(true);
        btnExcluir.setEnabled(true);
    }//GEN-LAST:event_ConsultAnimeTableFocusGained

    private void ConsultAnimeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConsultAnimeTableMouseClicked
        this.selectedAnime = (Anime) ConsultAnimeTable.getValueAt(ConsultAnimeTable.getSelectedRow(), 1);
        bigtxtConsultAnimeSin.setText(this.selectedAnime.getSinopse());
    }//GEN-LAST:event_ConsultAnimeTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       labelAnimeName.setText("Anime: "+this.selectedAnime.getName());
       
       txtNameAnimeUpdate.setText(this.selectedAnime.getName());
       bigtxtSinopseUpdate.setText(this.selectedAnime.getSinopse());
       
       DefaultListModel lista = (DefaultListModel) listGenerosUpdate.getModel();
       
       for (Genero genero : this.selectedAnime.getGeneros()){
            lista.addElement(genero);
       }
       boxFaixaUpdate.setSelectedItem(this.selectedAnime.getF_etaria());
       animeDataUpdate.setCalendar(this.selectedAnime.getData());
       DefaultComboBoxModel listaEstudios = (DefaultComboBoxModel) boxEstudioUpdate.getModel();
       for (int i = 0; i < listaEstudios.getSize() ; i++){
           Estudio estudio = (Estudio) listaEstudios.getElementAt(i);
           if (estudio.getIdestudio() == this.selectedAnime.getEstudio().getIdestudio()){
               boxEstudioUpdate.setSelectedItem(estudio);
               break;
           }
       }
       jTabbedPane1.setSelectedIndex(2);
       jTabbedPane1.setEnabledAt(2, true);
       jTabbedPane1.setEnabledAt(0, false);
       jTabbedPane1.setEnabledAt(1, false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUpdateAnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAnimeActionPerformed
        AtualizarAnime();
    }//GEN-LAST:event_btnUpdateAnimeActionPerformed

    private void btnAdicionarGeneroUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarGeneroUpdateActionPerformed
        AddGenero(listGenerosUpdate, boxGenderUpdate);
    }//GEN-LAST:event_btnAdicionarGeneroUpdateActionPerformed

    private void btnRemoverGeneroUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverGeneroUpdateActionPerformed
        RemoveGenero(listGenerosUpdate);
    }//GEN-LAST:event_btnRemoverGeneroUpdateActionPerformed

    private void btnRemoverGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverGeneroActionPerformed
        RemoveGenero(listGeneros);
    }//GEN-LAST:event_btnRemoverGeneroActionPerformed

    private void txtConsultAnimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConsultAnimeFocusGained
        btnUpdate.setEnabled(false);
        btnExcluir.setEnabled(false);
        bigtxtConsultAnimeSin.setText("");
        ConsultAnimeTable.clearSelection();
        this.selectedAnime = null;
    }//GEN-LAST:event_txtConsultAnimeFocusGained

    private void ConsultAnimeTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConsultAnimeTableKeyReleased
        if (evt.getKeyCode()== 40 || evt.getKeyCode() == 38){
            this.selectedAnime = (Anime) ConsultAnimeTable.getValueAt(ConsultAnimeTable.getSelectedRow(), 1);
            bigtxtConsultAnimeSin.setText(this.selectedAnime.getSinopse());
        }
    }//GEN-LAST:event_ConsultAnimeTableKeyReleased

    private void txtConsultAnimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultAnimeKeyReleased
        if(!txtConsultAnime.getText().equals(this.comp) && txtConsultAnime.getText().isEmpty()){
            ListarAnimes();
        }else if(!txtConsultAnime.getText().equals(this.comp)){
            ListarAnimes(txtConsultAnime.getText());
        }
        this.comp = txtConsultAnime.getText();
    }//GEN-LAST:event_txtConsultAnimeKeyReleased

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Deseja Excluir?\nAnime: "+ConsultAnimeTable.getValueAt(ConsultAnimeTable.getSelectedRow(), 1).toString());
        if (a == 0){
            DefaultTableModel dados = (DefaultTableModel) ConsultAnimeTable.getModel();
            AnimeDAO dao = new AnimeDAO();
            dao.ExcluirAnime(selectedAnime);
            if (!txtConsultAnime.getText().isEmpty()){
                AnimeList.remove(selectedAnime);
                dados.removeRow(ConsultAnimeTable.getSelectedRow());
                ListarAnimes(txtConsultAnime.getText());
            }else{
                ListarAnimes();
            }
            btnUpdate.setEnabled(false);
            btnExcluir.setEnabled(false);
            bigtxtConsultAnimeSin.setText("");
            ConsultAnimeTable.clearSelection();
            this.selectedAnime = null;
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarAnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAnimeActionPerformed
        LimparEditar();
        jTabbedPane1.setSelectedIndex(0);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, true);
    }//GEN-LAST:event_btnCancelarAnimeActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        new HomeAdm(this.user).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnClearAnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAnimeActionPerformed
        LimparCadastro();
    }//GEN-LAST:event_btnClearAnimeActionPerformed
    
    private void FilterJComboBox(){
        AutoCompleteDecorator.decorate(boxEstudio);
        AutoCompleteDecorator.decorate(boxEstudioUpdate);
        AutoCompleteDecorator.decorate(boxGender);
        AutoCompleteDecorator.decorate(boxGenderUpdate);
    }
    private void CadastrarAnimes(){
        DefaultComboBoxModel lista = (DefaultComboBoxModel) boxEstudio.getModel();
        DefaultListModel listageneros = (DefaultListModel) listGeneros.getModel();
       
        if (txtNameAnime.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Digite o nome do anime!");
        }else if(boxEstudio.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Selecione um estudio!");
        }else if(listageneros.getSize() == 0){
            JOptionPane.showMessageDialog(null, "Adicione algum gênero!");
        }else if(bigtxtSinopse.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Adicione uma sinopse!");
        }else if(boxFaixa.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Selecione uma faixa etaria!");
        }else if(animeData.getDate() == null){
            JOptionPane.showMessageDialog(null, "Selecione uma Data de Lançamento!");
        }
        else{
            AnimeDAO dao = new AnimeDAO();
            Estudio estudio = (Estudio) lista.getSelectedItem();

            int tam = listageneros.getSize();
            ArrayList<Genero> generos = new ArrayList<>();

            for (int i = 0; i < tam; i++){
                generos.add((Genero) listageneros.get(i));
            }

            dao.cadastrarAnime(txtNameAnime.getText(), bigtxtSinopse.getText(), boxFaixa.getItemAt(boxFaixa.getSelectedIndex()), estudio.getIdestudio(), animeData.getDate().getTime(),generos);
            LimparCadastro();
            btnUpdate.setEnabled(false);
            btnExcluir.setEnabled(false);
            bigtxtConsultAnimeSin.setText("");
            ConsultAnimeTable.clearSelection();
            this.selectedAnime = null;
            jTabbedPane1.setSelectedIndex(0);
            ListarAnimes();
        }
    }
    
    private void AtualizarAnime(){
        DefaultComboBoxModel lista = (DefaultComboBoxModel) boxEstudioUpdate.getModel();
        DefaultListModel listageneros = (DefaultListModel) listGenerosUpdate.getModel();
        
        if (txtNameAnimeUpdate.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Digite o nome do anime!");
        }else if(boxEstudioUpdate.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Selecione um estudio!");
        }else if(listageneros.getSize() == 0){
            JOptionPane.showMessageDialog(null, "Adicione algum gênero!");
        }else if(bigtxtSinopseUpdate.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Adicione uma sinopse!");
        }else if(boxFaixaUpdate.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Selecione uma faixa etaria!");
        }else if(animeDataUpdate.getDate() == null){
            JOptionPane.showMessageDialog(null, "Selecione uma Data de Lançamento!");
        }
        else{
            AnimeDAO dao = new AnimeDAO();
            Estudio estudio = (Estudio) lista.getSelectedItem();
            
            List<Genero> oldGens = new ArrayList<>();
            List<Genero> newGens = new ArrayList<>();
            for (int i = 0; i < listageneros.getSize(); i++){
                newGens.add((Genero) listageneros.get(i));
            }
            
            for (int i = 0; i < selectedAnime.getGeneros().size(); i++){
                boolean v = true;
                for (int j = 0; j < newGens.size();j++){
                    if (selectedAnime.getGeneros().get(i).getIdcategoria() == newGens.get(j).getIdcategoria()){
                        newGens.remove(newGens.get(j));
                        v = false;
                        break;
                    }
                }
                if (v){
                    oldGens.add(selectedAnime.getGeneros().get(i));
                }
            }
            
            if (txtNameAnimeUpdate.getText().equals(selectedAnime.getName()) && bigtxtSinopseUpdate.getText().equals(selectedAnime.getSinopse()) && boxFaixaUpdate.getItemAt(boxFaixaUpdate.getSelectedIndex()).equals(selectedAnime.getF_etaria()) && estudio.getIdestudio() == selectedAnime.getEstudio().getIdestudio() && oldGens.isEmpty() && newGens.isEmpty() && selectedAnime.getData().compareTo(animeDataUpdate.getCalendar()) == 0){
                JOptionPane.showMessageDialog(null, "Faça Alguma Alteração Para Atualizar!");
            }else{
                Anime newAnime = new Anime(selectedAnime.getIdanime(), txtNameAnimeUpdate.getText(), bigtxtSinopseUpdate.getText(), boxFaixaUpdate.getItemAt(boxFaixaUpdate.getSelectedIndex()), selectedAnime.getMedia(), estudio, animeDataUpdate.getDate(),newGens);
                dao.AtualizarAnime(oldGens, newAnime);
                btnUpdate.setEnabled(false);
                btnExcluir.setEnabled(false);
                bigtxtConsultAnimeSin.setText("");
                ConsultAnimeTable.clearSelection();
                this.selectedAnime = null;
                ListarAnimes();
                jTabbedPane1.setSelectedIndex(0);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setEnabledAt(0, true);
                jTabbedPane1.setEnabledAt(1, true);
            }
        }
    }
    
    private void LimparCadastro(){
        txtNameAnime.setText("");
        bigtxtSinopse.setText("");
        boxEstudio.setSelectedIndex(-1);
        boxFaixa.setSelectedIndex(-1);
        DefaultListModel lista = (DefaultListModel) listGeneros.getModel();
        lista.removeAllElements();
    }
    private void LimparEditar(){
        txtNameAnimeUpdate.setText("");
        bigtxtSinopseUpdate.setText("");
        boxEstudioUpdate.setSelectedIndex(-1);
        boxFaixaUpdate.setSelectedIndex(-1);
        DefaultListModel lista = (DefaultListModel) listGenerosUpdate.getModel();
        animeDataUpdate.cleanup();
        lista.removeAllElements();
    }
    private void BuscarEstudios(){
        EstudioDAO dao = new EstudioDAO();
        List<Estudio> estudios = dao.listarEstudios();
        
        DefaultComboBoxModel lista = (DefaultComboBoxModel) boxEstudio.getModel();
        DefaultComboBoxModel lista2 = (DefaultComboBoxModel) boxEstudioUpdate.getModel();
        
        estudios.forEach((estudio) -> {
            lista.addElement(estudio);
            lista2.addElement(estudio);
        });
        boxEstudio.setSelectedIndex(-1);
        boxEstudioUpdate.setSelectedIndex(-1);
    }
    
    private void BuscarGeneros(){
        GeneroDAO dao = new GeneroDAO();
        List<Genero> generos = dao.listarGeneros();
        
        DefaultComboBoxModel lista = (DefaultComboBoxModel) boxGender.getModel();
        DefaultComboBoxModel lista2 = (DefaultComboBoxModel) boxGenderUpdate.getModel();
        
        generos.forEach((genero) -> {
            lista.addElement(genero);
            lista2.addElement(genero);
        });
        boxGender.setSelectedIndex(-1);
        boxGenderUpdate.setSelectedIndex(-1);
    }
    
    private void ListarAnimes(){
        DefaultTableModel dados = (DefaultTableModel) ConsultAnimeTable.getModel();
        dados.setNumRows(0);
        
        AnimeDAO dao = new AnimeDAO();
        this.AnimeList = dao.listarAnimes();
        for (Anime anime : this.AnimeList){
            dados.addRow(new Object[]{
                anime.getIdanime(),
                anime,
                anime.getF_etaria(),
                anime.getMedia(),
                anime.Generos(),
                anime.getEstudio().getNome(),
                anime.getDataString()
            });
        }
    }
    private void ListarAnimes(String s){
        DefaultTableModel dados = (DefaultTableModel) ConsultAnimeTable.getModel();
        dados.setNumRows(0);
        
        for (Anime anime : this.AnimeList){
            if (anime.getName().toLowerCase().contains(s.toLowerCase())){
                dados.addRow(new Object[]{
                    anime.getIdanime(),
                    anime,
                    anime.getF_etaria(),
                    anime.getMedia(),
                    anime.Generos(),
                    anime.getEstudio().getNome(),
                    anime.getDataString()
                });
            }
        }
    }
    
    private void AddGenero(JList listaG, JComboBox selectG){
        try {
            DefaultListModel lista = (DefaultListModel) listaG.getModel();
            int tam = lista.getSize();
            boolean v = false;
            Genero select = (Genero) selectG.getSelectedItem();
            for (int i = 0; i < tam; i++){
                Genero temp = (Genero) lista.get(i);
                if (temp.getIdcategoria() == select.getIdcategoria()){
                    v = true;
                    break;
                }
            }
            if (v){
                JOptionPane.showMessageDialog(null, "Gênero já adicionado!");
            }else{
                lista.addElement(select);
            }    
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }
    private void RemoveGenero(JList lista){
        DefaultListModel model = (DefaultListModel) lista.getModel();
        if (lista.getSelectedIndex() != -1){
            model.removeElementAt(lista.getSelectedIndex());
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um genero para remover!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConsultAnimeSinLabel;
    private javax.swing.JTable ConsultAnimeTable;
    private javax.swing.JLabel DataLabel;
    private com.toedter.calendar.JDateChooser animeData;
    private com.toedter.calendar.JDateChooser animeDataUpdate;
    private javax.swing.JTextPane bigtxtConsultAnimeSin;
    private javax.swing.JTextPane bigtxtSinopse;
    private javax.swing.JTextPane bigtxtSinopseUpdate;
    private javax.swing.JComboBox<String> boxEstudio;
    private javax.swing.JComboBox<String> boxEstudioUpdate;
    private javax.swing.JComboBox<String> boxFaixa;
    private javax.swing.JComboBox<String> boxFaixaUpdate;
    private javax.swing.JComboBox<String> boxGender;
    private javax.swing.JComboBox<String> boxGenderUpdate;
    private javax.swing.JButton btnAdicionarGenero;
    private javax.swing.JButton btnAdicionarGeneroUpdate;
    private javax.swing.JButton btnCadastraAnime;
    private javax.swing.JButton btnCancelarAnime;
    private javax.swing.JButton btnClearAnime;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRemoverGenero;
    private javax.swing.JButton btnRemoverGeneroUpdate;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateAnime;
    private javax.swing.JLabel consultAnimeLabel;
    private javax.swing.JLabel estudioLabel;
    private javax.swing.JLabel estudioLabel1;
    private javax.swing.JLabel estudioLabel3;
    private javax.swing.JLabel faixaLabel;
    private javax.swing.JLabel faixaLabel1;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel genderLabel1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private org.jdesktop.swingx.JXCollapsiblePane jXCollapsiblePane1;
    private javax.swing.JLabel labelAnimeName;
    private javax.swing.JList<String> listGeneros;
    private javax.swing.JList<String> listGenerosUpdate;
    private javax.swing.JLabel nameAnimeLabel;
    private javax.swing.JLabel nameAnimeLabel1;
    private javax.swing.JLabel sinopseLabel;
    private javax.swing.JLabel sinopseLabel1;
    private javax.swing.JTextField txtConsultAnime;
    private javax.swing.JTextField txtNameAnime;
    private javax.swing.JTextField txtNameAnimeUpdate;
    // End of variables declaration//GEN-END:variables
}
