/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pctFormulario;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pctControle.Anime;
import pctControle.Usuario;
import pctDAO.ReviewDAO;
import pctControle.Review;

/**
 *
 * @author Luis Henrique
 */
public class ConsultaReview extends javax.swing.JFrame {

    /**
     * Creates new form ConsultaReview
     */
    private final Usuario user;
    private Anime anime = null;
    
    public ConsultaReview(Usuario user, Anime anime) {
        initComponents();
        this.user = user;
        this.anime = anime;
        
        labelAnime.setText("Anime: "+anime.getName());
        userLabel.setText("Usuário: "+user.getUsername());
        ListarReviews(anime);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consultTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        bigtxtReview = new javax.swing.JTextPane();
        reviewLabel = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnCreateReview = new javax.swing.JButton();
        userLabel = new javax.swing.JLabel();
        btnUpdateReview = new javax.swing.JButton();
        btnexcluirReview = new javax.swing.JButton();
        labelAnime = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reviews");
        setResizable(false);

        consultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuário", "Nota", "Review", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        consultTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        consultTable.getTableHeader().setReorderingAllowed(false);
        consultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultTableMouseClicked(evt);
            }
        });
        consultTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                consultTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(consultTable);
        if (consultTable.getColumnModel().getColumnCount() > 0) {
            consultTable.getColumnModel().getColumn(0).setResizable(false);
            consultTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            consultTable.getColumnModel().getColumn(1).setResizable(false);
            consultTable.getColumnModel().getColumn(1).setPreferredWidth(5);
            consultTable.getColumnModel().getColumn(2).setResizable(false);
            consultTable.getColumnModel().getColumn(2).setPreferredWidth(400);
            consultTable.getColumnModel().getColumn(3).setResizable(false);
            consultTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        bigtxtReview.setEditable(false);
        jScrollPane2.setViewportView(bigtxtReview);

        reviewLabel.setText("Review:");

        btnBack.setText("Voltar");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCreateReview.setText("Criar Review");
        btnCreateReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateReviewActionPerformed(evt);
            }
        });

        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userLabel.setText("Usuário: ");

        btnUpdateReview.setText("Editar");
        btnUpdateReview.setEnabled(false);
        btnUpdateReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateReviewActionPerformed(evt);
            }
        });

        btnexcluirReview.setText("Excluir");
        btnexcluirReview.setEnabled(false);
        btnexcluirReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexcluirReviewActionPerformed(evt);
            }
        });

        labelAnime.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        labelAnime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAnime.setText("Anime:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCreateReview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(67, 67, 67)
                        .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(btnUpdateReview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnexcluirReview))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reviewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(666, 666, 666))
                    .addComponent(labelAnime, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelAnime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reviewLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnCreateReview)
                    .addComponent(userLabel)
                    .addComponent(btnUpdateReview)
                    .addComponent(btnexcluirReview))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateReviewActionPerformed
        new pctFormulario.Review(this.user, this.anime, this).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnCreateReviewActionPerformed

    private void consultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultTableMouseClicked
        Review r = (Review) consultTable.getValueAt(consultTable.getSelectedRow(), 2);
        bigtxtReview.setText(r.getDescricao());
        if (r.getId_user() == this.user.getIduser()){
            btnUpdateReview.setEnabled(true);
            btnexcluirReview.setEnabled(true);
        }else{
            btnUpdateReview.setEnabled(false);
            btnexcluirReview.setEnabled(false);
        }
    }//GEN-LAST:event_consultTableMouseClicked

    private void consultTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultTableKeyReleased
        if (evt.getKeyCode()== 40 || evt.getKeyCode() == 38){
            Review r = (Review) consultTable.getValueAt(consultTable.getSelectedRow(), 2);
            bigtxtReview.setText(r.getDescricao());
            if (r.getId_user() == this.user.getIduser()){
                btnUpdateReview.setEnabled(true);
                btnexcluirReview.setEnabled(true);
            }else{
                btnUpdateReview.setEnabled(false);
                btnexcluirReview.setEnabled(false);
            }
        }
    }//GEN-LAST:event_consultTableKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new Animes(this.user).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateReviewActionPerformed
        new pctFormulario.Review(this.user, this.anime, this, (Review) consultTable.getValueAt(consultTable.getSelectedRow(), 2)).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnUpdateReviewActionPerformed

    private void btnexcluirReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexcluirReviewActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Deseja Excluir?");
        if (a == 0){
            pctControle.Review review = (Review) consultTable.getValueAt(consultTable.getSelectedRow(), 2);
            ReviewDAO dao = new ReviewDAO();
           
            dao.excluirReview(review);
            btnCreateReview.setEnabled(true);
            consultTable.clearSelection();
            btnUpdateReview.setEnabled(false);
            btnexcluirReview.setEnabled(false);
            bigtxtReview.setText("");
            ListarReviews(this.anime);
        }        
    }//GEN-LAST:event_btnexcluirReviewActionPerformed

    private void ListarReviews(Anime anime){
        DefaultTableModel dados = (DefaultTableModel) consultTable.getModel();
        dados.setNumRows(0);
        ReviewDAO dao = new ReviewDAO();
        List<Review> lista = dao.listarReviews(anime, this.user.getIduser());
        for (Review review : lista){
            if (review.getId_Anime() == anime.getIdanime()){
                dados.addRow(new Object[]{
                    review.getUser(),
                    review.getNota(),
                    review,
                    review.getDataString()
                });
                if (review.getId_user() == this.user.getIduser()){
                    btnCreateReview.setEnabled(false);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane bigtxtReview;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateReview;
    private javax.swing.JButton btnUpdateReview;
    private javax.swing.JButton btnexcluirReview;
    private javax.swing.JTable consultTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAnime;
    private javax.swing.JLabel reviewLabel;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
